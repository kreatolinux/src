name: Build rootfs

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 0 * * 0'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/kreatolinux/builder:latest 

    steps:

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Cache Binaries
        id: binary-cache
        uses: actions/cache@v3
        with:
          path: /var/cache/kpkg/archives
          key: binary-cache

      - name: Build nocc rootfs tarball
        run: |
          IS_ACTIONS=y sh $GITHUB_WORKSPACE/src/scripts/build-ci.sh init
          IS_ACTIONS=y sh $GITHUB_WORKSPACE/src/scripts/build-ci.sh build nocc
      
      - name: Upload nocc Rootfs
        uses: actions/upload-artifact@v3.1.1
        with:
          # Artifact name
          name: nocc-rootfs # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ github.workspace }}/kreato-linux-nocc-*.tar.gz
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

      - name: Build builder rootfs tarball
        run: |
          IS_ACTIONS=y sh $GITHUB_WORKSPACE/src/scripts/build-ci.sh build builder
    
      - name: Upload Builder Rootfs
        uses: actions/upload-artifact@v3.1.1
        with:
          # Artifact name
          name: builder-rootfs # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ github.workspace }}/kreato-linux-builder-*.tar.gz
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error 
          
      - name: Build server rootfs tarball
        run: |
          IS_ACTIONS=y sh $GITHUB_WORKSPACE/src/scripts/build-ci.sh build server
    
      - name: Upload Server Rootfs
        uses: actions/upload-artifact@v3.1.1
        with:
          # Artifact name
          name: server-rootfs # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ github.workspace }}/kreato-linux-server-*.tar.gz
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error 
      
      - name: Build builder-gnu rootfs tarball
        run: |
          IS_ACTIONS=y sh $GITHUB_WORKSPACE/src/scripts/build-ci.sh build builder-gnu
    
      - name: Upload builder-gnu Rootfs
        uses: actions/upload-artifact@v3.1.1
        with:
          # Artifact name
          name: builder-gnu-rootfs # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ github.workspace }}/kreato-linux-builder-gnu-*.tar.gz
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error
      
      - name: Build builder-systemd rootfs tarball
        run: |
          IS_ACTIONS=y sh $GITHUB_WORKSPACE/src/scripts/build-ci.sh build builder-systemd

      - name: Upload builder-systemd Rootfs
        uses: actions/upload-artifact@v3.1.1
        with:
          # Artifact name
          name: builder-systemd-rootfs # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ github.workspace }}/kreato-linux-builder-systemd-*.tar.gz
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error 

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Download artifacts from build job
        uses: actions/download-artifact@v3
        
      - name: Prepare for Docker
        run: |
            mkdir /tmp/docker.tmp /tmp/docker.tmp.nocc /tmp/docker.tmp.builder-gnu /tmp/docker.tmp.server /tmp/docker.tmp.builder-systemd
            cp $GITHUB_WORKSPACE/src/docker/Dockerfile /tmp/docker.tmp.nocc || exit 1
            cp $GITHUB_WORKSPACE/src/docker/Dockerfile /tmp/docker.tmp/ || exit 1
            cp $GITHUB_WORKSPACE/src/docker/Dockerfile /tmp/docker.tmp.builder-gnu || exit 1
            cp $GITHUB_WORKSPACE/src/docker/Dockerfile /tmp/docker.tmp.server || exit 1
            cp $GITHUB_WORKSPACE/src/docker/Dockerfile /tmp/docker.tmp.builder-systemd || exit 1
            tar -xvpf $GITHUB_WORKSPACE/builder-gnu-rootfs/kreato-linux-builder-gnu-*.tar.gz -C "/tmp/docker.tmp.builder-gnu"
            tar -xvpf $GITHUB_WORKSPACE/builder-systemd-rootfs/kreato-linux-builder-systemd-*.tar.gz -C "/tmp/docker.tmp.builder-systemd"
            tar -xvpf $GITHUB_WORKSPACE/builder-rootfs/kreato-linux-builder-*.tar.gz -C "/tmp/docker.tmp"
            tar -xvpf $GITHUB_WORKSPACE/nocc-rootfs/kreato-linux-nocc-*.tar.gz -C "/tmp/docker.tmp.nocc"
            tar -xvpf $GITHUB_WORKSPACE/server-rootfs/kreato-linux-server-*.tar.gz -C "/tmp/docker.tmp.server"
            rm -rf $GITHUB_WORKSPACE/*-rootfs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GitHub Packages
        run: |
          echo $CR_PAT | docker login ghcr.io -u kreatolinux --password-stdin
        env:
          CR_PAT: ${{ secrets.CR_PAT }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push builder image
        uses: docker/build-push-action@v3
        with:
          context: /tmp/docker.tmp
          push: true
          tags: kreato/builder:latest,ghcr.io/kreatolinux/builder:latest
      
      - name: Remove builder image
        run: |
          sudo rm -rf /tmp/docker.tmp
          sudo docker rmi ghcr.io/kreatolinux/builder kreato/builder -f    
      
      - name: Build and push nocc image
        uses: docker/build-push-action@v3
        with:
          context: /tmp/docker.tmp.nocc
          push: true
          tags: kreato/linux:latest,ghcr.io/kreatolinux/nocc:latest

      - name: Remove nocc image
        run: |
          sudo rm -rf /tmp/docker.tmp.nocc
          sudo docker rmi ghcr.io/kreatolinux/nocc kreato/linux -f    
      
      - name: Build and push server image
        uses: docker/build-push-action@v3
        with:
          context: /tmp/docker.tmp.server
          push: true
          tags: kreato/server:latest,ghcr.io/kreatolinux/server:latest

      - name: Remove server image
        run: |
            sudo rm -rf /tmp/docker.tmp.server
            sudo docker rmi ghcr.io/kreatolinux/server kreato/server -f   
          
      - name: Build and push builder-gnu image
        uses: docker/build-push-action@v3
        with:
          context: /tmp/docker.tmp.builder-gnu
          push: true
          tags: kreato/builder-gnu:latest,ghcr.io/kreatolinux/builder-gnu:latest

      - name: Remove builder-gnu image
        run: |
          sudo rm -rf /tmp/docker.tmp.builder-gnu
          sudo docker rmi ghcr.io/kreatolinux/builder-gnu kreato/builder-gnu -f   

      - name: Build and push builder-systemd image
        uses: docker/build-push-action@v3
        with:
          context: /tmp/docker.tmp.builder-systemd
          push: true
          tags: kreato/builder-systemd:latest,ghcr.io/kreatolinux/builder-systemd:latest
